---
apiVersion: kubeaddons.mesosphere.io/v1beta1
kind: ClusterAddon
metadata:
  name: traefik-default
  labels:
    kubeaddons.mesosphere.io/name: traefik-default
    kubeaddons.mesosphere.io/provides: ingresscontroller
  annotations:
    catalog.kubeaddons.mesosphere.io/addon-revision: "1.7.2-5"
    appversion.kubeaddons.mesosphere.io/traefik: "1.7.2"
    endpoint.kubeaddons.mesosphere.io/traefik: "/ops/portal/traefik"
    docs.kubeaddons.mesosphere.io/traefik: "https://docs.traefik.io/v1.7"
    values.chart.helm.kubeaddons.mesosphere.io/traefik: "https://raw.githubusercontent.com/mesosphere/charts/5529163bb54ab1b951ffa2eaa60957722bd617db/staging/traefik/values.yaml"
spec:
  kubernetes:
    minSupportedVersion: v1.14.10
  chartReference:
    chart: traefik
    repo: https://mesosphere.github.io/charts/staging
    version: 1.72.14
    values: |
      ---
      ssl:
        enabled: true
        enforced: true
        # TODO: This comment might no longer be true.
        # dex service is exposed with TLS certificate signed by self signed root
        # Dex CA certificate. It is not clear if traefik supports configuring
        # trusted certificates per backend. This should be investigated in a
        # separate issue.
        # See: https://jira.mesosphere.com/browse/DCOS-56033
        insecureSkipVerify: true
        # TODO: We need to require users to provision the CA in a secret before
        # connecting the managed cluster
        caSecretName: custom-cert
